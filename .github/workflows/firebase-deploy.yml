name: Firebase Deploy - Static Site

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_ENV: production
  # Disable Next.js telemetry for CI/CD
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Cache Next.js build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/out
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        continue-on-error: false

      - name: Lint TypeScript and ESLint
        run: pnpm run lint
        continue-on-error: true

      - name: Build Next.js static export
        run: pnpm run build
        env:
          NEXT_PUBLIC_SITE_URL: ${{ secrets.FIREBASE_HOSTING_DOMAIN || 'https://oneqid.com' }}
          NEXT_PUBLIC_STRAPI_URL: ${{ secrets.NEXT_PUBLIC_STRAPI_URL }}
          STRAPI_API_TOKEN: ${{ secrets.STRAPI_API_TOKEN }}
          # Increase Node.js memory for builds
          NODE_OPTIONS: --max-old-space-size=4096
        continue-on-error: false

      - name: Verify build output
        run: |
          if [ ! -d "out" ]; then
            echo "❌ Build failed: 'out' directory not found"
            exit 1
          fi
          echo "✅ Build successful. Output directory contents:"
          ls -lah out | head -20
          echo "Total files: $(find out -type f | wc -l)"

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
        continue-on-error: false

      - name: Add deployment success comment
        if: github.event_name == 'pull_request' && success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ **Firebase deployment successful!**\n\nYour static site has been deployed. Preview: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })

      - name: Add deployment failure comment
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Firebase deployment failed**\n\nCheck the build logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
